{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adrian Bradu\\\\Desktop\\\\React\\\\janmar\\\\src\\\\components\\\\TextFileReader\\\\TextFileReader.component.jsx\";\nimport React from \"react\";\n/*\r\n\tRead a text file and out put the content.\r\n\t\r\n\tExample Usage:\r\n\tvar myTxt = require(\"./myTxt.txt\");\r\n\t...\r\n\t<TextFileReader\r\n\t\ttxt={myTxt}\r\n\t/>\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TextFileReader extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.readTextFile = file => {\n      var rawFile = new XMLHttpRequest();\n      rawFile.open(\"GET\", file, false);\n\n      rawFile.onreadystatechange = () => {\n        if (rawFile.readyState === 4) {\n          if (rawFile.status === 200 || rawFile.status == 0) {\n            var allText = rawFile.responseText;\n            this.setState({\n              text: allText\n            });\n          }\n        }\n      };\n\n      rawFile.send(null);\n    };\n\n    this.state = {\n      text: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.readTextFile(this.props.txt);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.text.split(\"\\n\").map((item, key) => {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [item, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 35\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default TextFileReader;","map":{"version":3,"sources":["C:/Users/Adrian Bradu/Desktop/React/janmar/src/components/TextFileReader/TextFileReader.component.jsx"],"names":["React","TextFileReader","Component","constructor","props","readTextFile","file","rawFile","XMLHttpRequest","open","onreadystatechange","readyState","status","allText","responseText","setState","text","send","state","componentDidMount","txt","render","split","map","item","key"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,MAAMC,cAAN,SAA6BD,KAAK,CAACE,SAAnC,CAA6C;AAC5CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,SAYnBC,YAZmB,GAYJC,IAAI,IAAI;AACtB,UAAIC,OAAO,GAAG,IAAIC,cAAJ,EAAd;AACAD,MAAAA,OAAO,CAACE,IAAR,CAAa,KAAb,EAAoBH,IAApB,EAA0B,KAA1B;;AACAC,MAAAA,OAAO,CAACG,kBAAR,GAA6B,MAAM;AAClC,YAAIH,OAAO,CAACI,UAAR,KAAuB,CAA3B,EAA8B;AAC7B,cAAIJ,OAAO,CAACK,MAAR,KAAmB,GAAnB,IAA0BL,OAAO,CAACK,MAAR,IAAkB,CAAhD,EAAmD;AAClD,gBAAIC,OAAO,GAAGN,OAAO,CAACO,YAAtB;AACA,iBAAKC,QAAL,CAAc;AACbC,cAAAA,IAAI,EAAEH;AADO,aAAd;AAGA;AACD;AACD,OATD;;AAUAN,MAAAA,OAAO,CAACU,IAAR,CAAa,IAAb;AACA,KA1BkB;;AAGlB,SAAKC,KAAL,GAAa;AACZF,MAAAA,IAAI,EAAE;AADM,KAAb;AAGA;;AAEDG,EAAAA,iBAAiB,GAAG;AACnB,SAAKd,YAAL,CAAkB,KAAKD,KAAL,CAAWgB,GAA7B;AACA;;AAkBDC,EAAAA,MAAM,GAAG;AACR,wBACC;AAAA,gBACE,KAAKH,KAAL,CAAWF,IAAX,CAAgBM,KAAhB,CAAsB,IAAtB,EAA4BC,GAA5B,CAAgC,CAACC,IAAD,EAAOC,GAAP,KAAe;AAC/C,4BAAO;AAAA,qBAAiBD,IAAjB,eAAsB;AAAA;AAAA;AAAA;AAAA,kBAAtB;AAAA,WAAWC,GAAX;AAAA;AAAA;AAAA;AAAA,gBAAP;AACA,OAFA;AADF;AAAA;AAAA;AAAA;AAAA,YADD;AAOA;;AArC2C;;AAwC7C,eAAexB,cAAf","sourcesContent":["import React from \"react\";\r\n\r\n\r\n/*\r\n\tRead a text file and out put the content.\r\n\t\r\n\tExample Usage:\r\n\tvar myTxt = require(\"./myTxt.txt\");\r\n\t...\r\n\t<TextFileReader\r\n\t\ttxt={myTxt}\r\n\t/>\r\n */\r\nclass TextFileReader extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\ttext: \"\"\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.readTextFile(this.props.txt);\r\n\t}\r\n\r\n\treadTextFile = file => {\r\n\t\tvar rawFile = new XMLHttpRequest();\r\n\t\trawFile.open(\"GET\", file, false);\r\n\t\trawFile.onreadystatechange = () => {\r\n\t\t\tif (rawFile.readyState === 4) {\r\n\t\t\t\tif (rawFile.status === 200 || rawFile.status == 0) {\r\n\t\t\t\t\tvar allText = rawFile.responseText;\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\ttext: allText\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\trawFile.send(null);\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{this.state.text.split(\"\\n\").map((item, key) => {\r\n\t\t\t\t\treturn <span key={key}>{item}<br /></span>;\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default TextFileReader;"]},"metadata":{},"sourceType":"module"}