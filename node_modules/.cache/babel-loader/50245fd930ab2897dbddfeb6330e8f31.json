{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adrian Bradu\\\\Desktop\\\\React\\\\janmar\\\\src\\\\components\\\\ContactForm\\\\ContactForm.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport './ContactForm.component.scss';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactForm = () => {\n  _s();\n\n  const [sent, setSent] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const handleSend = async () => {\n    setSent(true);\n\n    try {\n      const response = await axios.post('/contact', {\n        name,\n        email,\n        message\n      });\n      console.log(\"Request back\", response);\n    } catch (error) {\n      console.error(error.code);\n      console.error(error.message);\n      console.error(error.stack);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Nume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        required: true,\n        onChange: event => setName(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        required: true,\n        onChange: event => setEmail(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"message\",\n        children: \"Mesaj\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"message\",\n        required: true,\n        onChange: event => setMessage(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      onClick: event => {\n        event.preventDefault();\n        handleSend();\n      },\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContactForm, \"CjzDs+3rEEZVkyCmQ1exlT+EgtE=\");\n\n_c = ContactForm;\nexport default ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["C:/Users/Adrian Bradu/Desktop/React/janmar/src/components/ContactForm/ContactForm.component.jsx"],"names":["React","useState","axios","ContactForm","sent","setSent","name","setName","email","setEmail","message","setMessage","handleSend","response","post","console","log","error","code","stack","event","target","value","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,8BAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAAEK,IAAF,EAAQC,OAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAEO,KAAF,EAASC,QAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAAES,OAAF,EAAWC,UAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;;AAGA,QAAMW,UAAU,GAAG,YAAW;AAC5BP,IAAAA,OAAO,CAAC,IAAD,CAAP;;AACA,QAAI;AACA,YAAMQ,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAN,CAAW,UAAX,EAAuB;AAC1CR,QAAAA,IAD0C;AACpCE,QAAAA,KADoC;AAC7BE,QAAAA;AAD6B,OAAvB,CAAvB;AAGAK,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BH,QAA5B;AACH,KALD,CAKE,OAAOI,KAAP,EAAc;AACZF,MAAAA,OAAO,CAACE,KAAR,CAAcA,KAAK,CAACC,IAApB;AACAH,MAAAA,OAAO,CAACE,KAAR,CAAcA,KAAK,CAACP,OAApB;AACAK,MAAAA,OAAO,CAACE,KAAR,CAAcA,KAAK,CAACE,KAApB;AACH;AACF,GAZD;;AAaF,sBACE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA,4BACE;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,MAAtB;AAA6B,QAAA,QAAQ,MAArC;AAAsC,QAAA,QAAQ,EAAGC,KAAD,IAAWb,OAAO,CAACa,KAAK,CAACC,MAAN,CAAaC,KAAd;AAAlE;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,EAAE,EAAC,OAAvB;AAA+B,QAAA,QAAQ,MAAvC;AAAwC,QAAA,QAAQ,EAAGF,KAAD,IAAWX,QAAQ,CAACW,KAAK,CAACC,MAAN,CAAaC,KAAd;AAArE;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eASE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAU,QAAA,EAAE,EAAC,SAAb;AAAuB,QAAA,QAAQ,MAA/B;AAAgC,QAAA,QAAQ,EAAGF,KAAD,IAAWT,UAAU,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAd;AAA/D;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,eAaE;AACA,MAAA,IAAI,EAAC,QADL;AAEA,MAAA,OAAO,EAAIF,KAAD,IAAW;AACnBA,QAAAA,KAAK,CAACG,cAAN;AACAX,QAAAA,UAAU;AACX,OALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CA5CD;;GAAMT,W;;KAAAA,W;AA8CN,eAAeA,WAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport './ContactForm.component.scss'\r\nimport axios from 'axios'\r\n\r\nconst ContactForm = () => {\r\n    const [sent, setSent] = useState(false)\r\n    const [ name, setName ] = useState(\"\")\r\n    const [ email, setEmail ] = useState(\"\")\r\n    const [ message, setMessage ] = useState(\"\")\r\n\r\n\r\n    const handleSend = async() => {\r\n      setSent(true)\r\n      try {\r\n          const response = await axios.post('/contact', {\r\n              name, email, message \r\n          })\r\n          console.log(\"Request back\", response)\r\n      } catch (error) {\r\n          console.error(error.code);\r\n          console.error(error.message);\r\n          console.error(error.stack);\r\n      }\r\n    }\r\n  return (\r\n    <form className=\"form\">\r\n      <div>\r\n        <label htmlFor=\"name\">Nume</label>\r\n        <input type=\"text\" id=\"name\" required onChange={(event) => setName(event.target.value)}/>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"email\">Email:</label>\r\n        <input type=\"email\" id=\"email\" required onChange={(event) => setEmail(event.target.value)}/>\r\n      </div>\r\n      <div className=\"message\">\r\n        <label htmlFor=\"message\">Mesaj</label>\r\n        <textarea id=\"message\" required onChange={(event) => setMessage(event.target.value)}/>\r\n      </div>\r\n      <button \r\n      type=\"submit\" \r\n      onClick={ (event) => {\r\n        event.preventDefault()\r\n        handleSend()\r\n      }}>\r\n          Submit\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;"]},"metadata":{},"sourceType":"module"}